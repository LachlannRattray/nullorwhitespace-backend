//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.10.102
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace NullOrWhitespace.Models
{
	/// <summary>Home Page</summary>
	[PublishedContentModel("homePage")]
	public partial class HomePage : Page
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "homePage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public HomePage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<HomePage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Image: Image to appear behind the intro paragraph.
		///</summary>
		[ImplementPropertyType("image")]
		public IPublishedContent Image
		{
			get { return this.GetPropertyValue<IPublishedContent>("image"); }
		}

		///<summary>
		/// Intro: Short intro paragraph.
		///</summary>
		[ImplementPropertyType("intro")]
		public string Intro
		{
			get { return this.GetPropertyValue<string>("intro"); }
		}

		///<summary>
		/// Description: A description for the site, to be used in taglines and auto-generated page titles.
		///</summary>
		[ImplementPropertyType("siteDescription")]
		public string SiteDescription
		{
			get { return this.GetPropertyValue<string>("siteDescription"); }
		}

		///<summary>
		/// Legal Text: Any legally required text to be displayed in the very foot of the site, such as copyright notices etc.
		///</summary>
		[ImplementPropertyType("siteLegalText")]
		public string SiteLegalText
		{
			get { return this.GetPropertyValue<string>("siteLegalText"); }
		}

		///<summary>
		/// Name: A name for the site, to be used in taglines and auto-generated page titles.
		///</summary>
		[ImplementPropertyType("siteName")]
		public string SiteName
		{
			get { return this.GetPropertyValue<string>("siteName"); }
		}

		///<summary>
		/// Social Links: Social links to show in the foot of the site.
		///</summary>
		[ImplementPropertyType("socialLinks")]
		public IEnumerable<IPublishedContent> SocialLinks
		{
			get { return this.GetPropertyValue<IEnumerable<IPublishedContent>>("socialLinks"); }
		}
	}
}
